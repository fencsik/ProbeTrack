MVT Task Notes and Musings
by David Fencsik

$Id: notes.txt,v 1.6 2004/10/06 16:55:13 fencsik Exp $

December 16, 2003:

Potential follow-up studies:

Present target cues during movement: i.e., Ss identify the targets
while they're already moving, which eliminates need to switch from
immobile to mobile targets, but still have to track subset of
identical targets for 5 s.

step up speed in ShiftTrack3 to see if changes effect of -1 = 0 > 1.

Look at function of tracking with reappearance positions in the range
[-1,1]. But we need to be careful to achieve some power here.

Start putting an intervening task into the gap, or before/after the
tracking task. 

Orthogonally vary distance travelled and trajectory changes during
blank interval. 

Start playing with confusion just before disappearance: e.g., multiple
objects cross over, post-gap distractor is closer to pre-gap target
than the post-gap target. 


December 18, 2003:

Well, what the heck do we know now? Results of ShiftTrack3 are that -1
and 0 are approx. equivalent, ...


January 5, 2004:

The current state of affairs is that we have two hypotheses. The
location-based matching hypothesis claims that participants match the
post-gap objects to the nearest pre-gap targets. This hypothesis
requires a memory system (visWM?) to store all the object locations
from the pre-gap display, and then a little location-based matching
following reappearance. This hypothesis predicts that observers will
switch from a target to a non-target during a gap if the non-target is
closer.

The trajectory-matching hypothesis claims that participants keep track
of each object's trajectory, and use the trajectory to predict where
the objects should be when they reappear, then match post-gap objects
based on their distance from the predicted locations. 

One problem with previous studies is that people may have access to
both mechanisms. Thus, when objects reappear at an offset of 1 (i.e.,
at the position where they should be had they moved at a constant
velocity before and during the gap), participants do better if they
rely on trajectory-based matching (unless the movement is so slight
that location-based matching is just as good), whereas reappearance
at position 0 (i.e., the pre-gap locations) is best handled by
location-based matching (only). Perhaps we could encourage one
strategy over the other by using predominantly one type of
reappearance position over the other, but save that for later.

If location-based matching is really how this thing gets done, then we
can intentionally set things up so a non-target distracter will be
closer to a pre-gap target location than the corresponding target
(which has moved away), and ask the subject to pick between the target
and the non-target distracter. According to the location-based
matching account, participants should be unable to track the target
and always switch to the distracter.


May 6, 2004: 

I had three ideas just before VSS (* indicates not from VSS):

1. ShiftTrack3 should be replicated with no movement following the
   gap. In that experiment, the advantage of Position -1 over Position
   1 may have occurred because in Position -1, the disk moved over
   Position 0 300 ms after the gap. Eliminating post-gap motion will
   remove this confound.
2. StopTrack2 needs to be replicated with a variable tracking
   interval. In the original experiment, trial length was fixed at 4
   sec. Since the gap always began 300 ms prior to the final frame,
   subjects could have anticipated the gap.
3. ShiftTrack studies could be run with all save one item shifting
   positions, and then test the one. This way, subjects might use one
   set for reacquisition, and we can test how effective that is when
   stimuli are inconsistent with their set. One difficulty with this
   is that the odd-one-out might cue which is the target.
4. *Extend range of targets tested in ShiftTrack and StopTrack.
5. *Change recall method, so they only have to make one decision:
   this makes capacity estimates easier. 


August 12, 2004:

So far, we have established that location-based matching is preferred
(shifttrack studies), but that people can use motion information from
one object to aid target reacquisition.

There are two things that would be nice to achieve with this
paradigm: One would be a double-dissociation between location and
motion information; so far, we have only the single dissociation from
eliminating motion information in the StopTrack studies. Second would
be to determine whether people are using motion information to
constrain their search, or whether they are actually predicting
reappearance location.

On a related topic, one hypothesis we proposed to explain why people
were better at synchronous disappearance compared to asynchronous
disappearance was that synchronous disappearance mimics task
postponement, so observers might just pause the task, then resume
it. Perhaps we should separately study asynchronous disappearance to
find out how people maintain tracking information during a task
without postponement mechanisms coming into play. One question we may
be interested in, for example, is whether reappearance at position 1
is easier to reacquire than reappearance at position 0 with
asynchronous disappearance. 


August 13, 2004:

Future possibilities:

1. Map out reacquisition probability between positions -1 and 1, and
   investigate perpendicular shifts during gap. This will give us a
   sense of how a moving object is represented during the gap. As a
   prerequisite, should try to improve effect sizes to Keane &
   Pylyshyn levels. Our current explanation for the difference is
   that we manipulate reappearance position between block and Keane &
   Pylyshyn did so within block.

2. Study target reacquisition in asynchronous disappearance case. See
   final paragraph from August 12, 2004. 

Jeremy's primary goal is to find interesting and novel things. His
suggestsions were:

1. Testing "what's hiding behind this bush" in NoahTrack. Is this
   programmed up already?

2. Testing whether different kinds of motion (e.g., brownian
   vs. ballistic) aid in discriminating targets from distracters.

3. He thought that #2 in the previous list might be worth
   exploring. Run something like ShiftTrack3 or 4 with asynchronous
   disappearance.

The fastest for me to program up is probably #3 from the second
list. #1 may be already programmed up, and I'll need Todd to send me
the latest code at least. #2 involves playing around with the two
movement vectors again. #3 just involves allowing for different gap
onset times for each disk. 

We begin with a basic replication of ShiftTrack3 with reappearance
positions -1, 0, and 1. Trial duration can be fixed (but perhaps a
bit longer, say 6 s). Block position and maybe manipulate ntargets (2
and 4?).


August 19, 2004:

Regarding #1 from the first list from August 13, 2004, Todd points
out that this might be a worthwhile study to run, just to have it
available. 


August 23, 2004:

Jeremy designed a new kind of MVT task in which targets are cued one
at a time while they are already moving.  Objects can be cued as
targets, then removed from the target set later.  Generally, this
allows us to study target acquisition and tracking processes.

Some specific question we might want to ask: How many targets can be
acquired/dropped simultaneously?  Can people simultaneously add some
targets while dropping others?  Is there any advantage to recalling
features from a recently dropped object as compared to an object that
was never a target?  How long does such an advantage last?  Can there
be a sudden switch from one group of targets to a non-overlapping set
of targets?  Does dropping/adding of targets become more difficult
with increasing tracking load?

What we need here are some good theories.  


September 24, 2004:

Regarding Jeremy's task mentioned above: Can people maintain any
sort of order information regarding the targets? Is there any kind of
recency or primacy effects? Can they do an N-back sorta thing where
the only have to track the most recent N objects and drop the (N+1)th
back each time a new one is added?


September 28, 2004:

Need to meet with Todd and Skyler regarding future directions for the
MVT projects.  Things to discuss:

* Brian's suggestions
* Future Noah direction: what's hiding behind this bush?
* "Killer ShiftTrack study": all reappear at position X except one,
  which reappears at position Y (Y != X). 
* Other ways to study preparatory set: adjust proportion of
  move/non-move/rewind trials within a block. 

These are the ideas we came up with at the meeting:

* Studies we want from Brian's suggestions:
  * Vary gap duration and reappearance position (e.g., move,
    non-move) to test memory duration for various kinds of info.
    Maybe Brian can run this one?
  * ShiftTrack with 1 vs. 4 targets, just to see if there's a bigger,
    qualitative difference than there was with 2 vs. 5 targets.  Gave
    this to Skyler to program up and run.
  * Contextual Cuing & Tracking: Ogawa and Yagi (2002) had a VSS
    poster (?) showing that repeating the trajectories of targets and
    distractors aids tracking performance (a la Jiang & Chun's
    contextual cuing in visual search).  Are there other "features"
    that might aid tracking: e.g., is it just target paths, just
    distractor paths, or both that need to be repeated (Ogawa &
    Yagi's results speak to this)?  Is it the trajectory or the final
    display that matters?  What if we rotate all the trajectories by
    90 degrees?
* Todd's new studies, which are still in development, but nearing
  deployment:
  * AllTrack: track everything and test fidelity of location memory.
    This is intended to provide a converging estimate of location
    capacity for the NoahTrack results.
  * ProbeTrack: track subset of objects and make a speeded
    target/non-target discrimination response to a probed object.
    Probe is presented at a variable delay following a gap.  The idea
    is to figure out how quickly Os reacquire targets following a gap.
* Jeremy's Pick-Up and Drop-Off (PUDO) tracking experiments:
  currently being run with three major conditions--standard tracking with
  simultaneously cued targets, target set gets built up one at a time
  (possibly with two different tracking durations), and targets get
  added and deleted during tracking.
* ShiftTrack "Killer" study: track 4/8, all-but-one reappear at
  position 1 (odd-one-out reappears at 0) and manipulate three
  conditions: odd-one-out is target or distractor, probe is
  target or distractor, and probe is odd-one-out or not.  I need to
  code this on up.
* NoahTrack: 
  * Run a version with a cue of "what is behind this bush?"  Possibly
    also change identities of stimuli during tracking.  
  * Run a version that allows us to estimate how many objects' worth
    of locations are stored separately from how many identities are
    stored.  This manipulation involves asking whether there is a
    target in a cued location vs. asking whether a particular animal
    was at that location.

